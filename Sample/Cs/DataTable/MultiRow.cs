// <auto-generated>
// generated using ContentTool. DO NOT EDIT!
// </auto-generated>

using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;
using System.Collections.ObjectModel;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json;

namespace ContentData
{
    #pragma warning disable
    
    public partial class SubObjectMutable
    {
        public string SubId { get; set; }
        public double SubValaue1 { get; set; }
        public string SubValaue2 { get; set; }
        public IList<double> SubArray { get; set; }
    }

    public partial class MultiRowMutable
    {
        public string Id { get; set; }
        public IList<SubObjectMutable> SubObjectArray { get; set; }
    }

    public partial class MultiRowTableMutable
    {
        public IList<MultiRowMutable> MultiRowList { get; set; }
    }

    //////////////////////////////
    // readonly class
    //////////////////////////////
    public partial class SubObject
    {
        public readonly string SubId;
        public readonly double SubValaue1;
        public readonly string SubValaue2;
        public readonly IReadOnlyList<double> SubArray;
        public SubObject(SubObjectMutable data)
        {
            SubId = data.SubId;
            SubValaue1 = data.SubValaue1;
            SubValaue2 = data.SubValaue2;
            if(data.SubArray != null)
                SubArray = data.SubArray.ToList().AsReadOnly();
        }
    }

    public partial class MultiRow
    {
        public readonly string Id;
        public readonly IReadOnlyList<SubObject> SubObjectArray;
        public MultiRow(MultiRowMutable data)
        {
            Id = data.Id;
            if(data.SubObjectArray != null)
                SubObjectArray = data.SubObjectArray.Select(x => new SubObject(x)).ToList().AsReadOnly();
        }
    }

    public partial class MultiRowTable
    {
        public readonly IReadOnlyList<MultiRow> MultiRowList;
        public MultiRowTable(MultiRowTableMutable data)
        {
            if(data.MultiRowList != null)
                MultiRowList = data.MultiRowList.Select(x => new MultiRow(x)).ToList().AsReadOnly();
        }
    }

}
