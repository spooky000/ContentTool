// <auto-generated>
// generated using ContentTool. DO NOT EDIT!
// </auto-generated>

using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;
using System.Collections.ObjectModel;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json;

namespace ContentData
{
    #pragma warning disable
    
    public partial class InnerObjectMutable
    {
        public string Value1 { get; set; }
        public double Value2 { get; set; }
        public IList<double> Value3 { get; set; }
        public string SimpleId { get; set; }
    }

    public partial class ObjectMutable
    {
        public string Id { get; set; }
        public InnerObjectMutable Object { get; set; }
    }

    public partial class ObjectTableMutable
    {
        public IList<ObjectMutable> ObjectList { get; set; }
    }

    //////////////////////////////
    // readonly class
    //////////////////////////////
    public partial class InnerObject
    {
        public readonly string Value1;
        public readonly double Value2;
        public readonly IReadOnlyList<double> Value3;
        public readonly string SimpleId;
        public InnerObject(InnerObjectMutable data)
        {
            Value1 = data.Value1;
            Value2 = data.Value2;
            if(data.Value3 != null)
                Value3 = data.Value3.ToList().AsReadOnly();
            SimpleId = data.SimpleId;
        }
    }

    public partial class Object
    {
        public readonly string Id;
        public readonly InnerObject Object;
        public Object(ObjectMutable data)
        {
            Id = data.Id;
            if(data.Object != null)
                Object = new InnerObject(data.Object);
        }
    }

    public partial class ObjectTable
    {
        public readonly IReadOnlyList<Object> ObjectList;
        public ObjectTable(ObjectTableMutable data)
        {
            if(data.ObjectList != null)
                ObjectList = data.ObjectList.Select(x => new Object(x)).ToList().AsReadOnly();
        }
    }

}
